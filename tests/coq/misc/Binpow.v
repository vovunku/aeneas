(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [binpow] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module Binpow.

(** [binpow::binpow]: forward function *)
Fixpoint binpow_fwd (n : nat) (a : u32) (n0 : u32) : result u32 :=
  match n with
  | O => Fail_ OutOfFuel
  | S n1 =>
    if n0 s= 0%u32
    then Return 1%u32
    else (
      i <- u32_rem n0 2%u32;
      if i s= 1%u32
      then (
        i0 <- u32_sub n0 1%u32;
        i1 <- u32_div i0 2%u32;
        half_pow <- binpow_fwd n1 a i1;
        i2 <- u32_mul half_pow half_pow;
        u32_mul i2 a)
      else (
        i0 <- u32_div n0 2%u32;
        half_pow <- binpow_fwd n1 a i0;
        u32_mul half_pow half_pow))
  end
.

End Binpow .
