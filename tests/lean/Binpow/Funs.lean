-- THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS
-- [binpow]: function definitions
import Base
import Binpow.Types
open Primitives

namespace binpow

/- [binpow::binpow]: forward function -/
divergent def binpow (a : U32) (n : U32) : Result U32 :=
  if n = (U32.ofInt 0)
  then Result.ret (U32.ofInt 1)
  else
    do
      let i ← n % (U32.ofInt 2)
      if i = (U32.ofInt 1)
      then
        do
          let i0 ← n - (U32.ofInt 1)
          let i1 ← i0 / (U32.ofInt 2)
          let half_pow ← binpow a i1
          let i2 ← half_pow * half_pow
          i2 * a
      else
        do
          let i0 ← n / (U32.ofInt 2)
          let half_pow ← binpow a i0
          half_pow * half_pow

end binpow
